Alumno : Juan Manuel Gauna
Profesor: Abelardo Jose Lugo
Segundo examen de Programacion Orientada a objetos

Problema
Cree una clase abstracta llamada Usuario con los siguientes atributos: dni (int), nombre(String) y
apellido (String). Un constructor que reciba como parámetro todos los atributos mencionados.
Getters y Setters por cada atributo. Además redefina el método toString para que muestre el
siguiente mensaje:  ̈El dni del  ̈ + NombreClase +  ̈ es  ̈ + dniUsuario.
Cree una segunda clase llamada Estudiante que herede de Usuario, y adicional tenga los siguientes
atributos: carrera (String), materiasAprobadas (ArrayList<String>) y materiasInscriptas
(ArrayList<String>). Sugerencia: recuerde inicializar los ArrayList en la declaración. Defina un
constructor que reciba como parámetros todos los atributos de la clase padre y el atributo carrera.
Agregue getters y setters por cada atributo. Cree dos métodos, uno llamado
imprimirMateriasAprobadas y otro llamado imprimirMateriasInscriptas, en ambos casos la
invocación del método debe mostrar por pantalla un título (“Materias Aprobadas” o “Materias
Inscriptas”) seguido del nombre de cada materia en el ArrayList a imprimir.
Cree una tercera clase llamada Profesor que herede de Usuario, y adicional tenga los siguientes
atributos: comisiones (ArrayList<String>). Sugerencia: recuerde inicializar los ArrayList en la
declaración. Defina un constructor que reciba como parámetros todos los atributos de la clase padre.
Agregue un getter y setter al atributo comisiones. Cree un método llamado imprimirComisiones, la
invocación del método debe mostrar por pantalla un título (“Comisiones”) seguido del nombre de
cada comisión en el ArrayList a imprimir.
Todos los atributos de las clases deben tener modificador de acceso private. Los constructores, los
getters y setters deben tener modificador de acceso public.
También cree una clase Main con un método main, e instancie dos objetos con los siguientes
valores en sus variables de instancia:
profesor(dni:100, nombre: “John”, apellido: “Doe”)
estudiante(dni: suDni, nombre: suNombre, apellido: suApellido, carrera: “Analista”)
Adicional mediante el método add agregue tres materiasAprobadas y dos materiasInscriptas al
objeto estudiante. Imprima ambos objetos, e invoque a los métodos imprimirMateriasAprobadas e
imprimirMateriasInscriptas del objeto estudiante.